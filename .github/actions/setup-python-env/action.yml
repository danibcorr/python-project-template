name: Setup Python Environment
description: Sets up Python, Poetry, and dependencies for the project

# Define inputs for the action, such as the Python version and the dependencies
# to install
inputs:
  src-python-version:
    description: "Python version to set up for the project"
    required: true
  dependencies:
    description: "Dependencies to install (e.g., test, lint)"
    required: true

runs:
  using: composite
  steps:
    # Step 1: Install the specified version of Python using actions/setup-python
    - name: Install Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.src-python-version }}

    # Step 2: Install Poetry, a tool for managing Python dependencies
    - name: Install Poetry
      uses: snok/install-poetry@v1

    # Step 3: Cache the virtual environment (venv) to speed up future installations
    - name: Load cached venv
      uses: actions/cache@v4
      id: cached-poetry-dependencies
      with:
        path: .venv
        key: "venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}"

    # Step 4: Install dependencies using Poetry if the cache is not found
    - name: Install dependencies using Poetry
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-root --with ${{ inputs.dependencies }}
      shell: bash

    # Step 5: Verify the installation of Poetry and display environment info
    - name: Verify installation
      shell: bash
      run: |
        poetry --version  # Check the installed version of Poetry
        poetry env info   # Display information about the Poetry virtual environment (useful for debugging)
