name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main, dev]

# Set up environment variables
env:
  # Folder where the project code is located
  SRC_PROJECT_FOLDER: "{{ cookiecutter.project_module_name }}"
  # Folder where test files are located
  SRC_PROJECT_TESTS: "{{ cookiecutter.project_test_folder_name }}"
  # Python version to use
  SRC_PYTHON_VERSION: "{{ cookiecutter.project_version_python }}"

# Define jobs in this workflow
jobs:
  setup-lint-test:
    name: Setup, Lint, Test, and Secure Code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Python & Install Dependencies
        uses: ./.github/actions/setup-python-env
        with:
          src-python-version: ${{'{{'}} env.SRC_PYTHON_VERSION {{'}}'}}
          dependencies: "pipeline"

      - name: Lint Code (ruff, Mypy, Complexipy)
        uses: ./.github/actions/lint-code
        with:
          src-project-folder: ${{'{{'}} env.SRC_PROJECT_FOLDER {{'}}'}}

      - name: Run Tests with Pytest
        uses: ./.github/actions/test-code
        with:
          src-project-folder: ${{'{{'}} env.SRC_PROJECT_FOLDER {{'}}'}}
          src-tests-folder: ${{'{{'}} env.SRC_PROJECT_TESTS {{'}}'}}

      - name: Run Bandit Security Scan
        uses: ./.github/actions/security
        with:
          src-project-folder: ${{'{{'}} env.SRC_PROJECT_FOLDER {{'}}'}}
          src-exclude: ${{'{{'}} env.SRC_PROJECT_TESTS {{'}}'}}

  build-docs:
    name: Build MkDocs Documentation
    runs-on: ubuntu-latest
    needs: setup-lint-test

    permissions:
      contents: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Python & Install Dependencies
        uses: ./.github/actions/setup-python-env
        with:
          src-python-version: ${{'{{'}} env.SRC_PYTHON_VERSION {{'}}'}}
          dependencies: "documentation"

      - name: Build MkDocs Site
        uses: ./.github/actions/build-mkdocs

  deploy-mkdocs:
    name: Deploy MkDocs to GitHub Pages
    runs-on: ubuntu-latest
    needs: build-docs

    if:
      github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref ==
      'refs/heads/dev')

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{'{{'}} steps.deployment.outputs.page_url {{'}}'}}

    steps:
      - name: Checkout gh-pages Branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages

      - name: Setup GitHub Pages
        uses: actions/configure-pages@v5

      - name: Upload Built Docs as Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "."

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
